<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gulimall.ware.dao.WareSkuDao">
    <!-- 1. 补充 selectAvailableStock 对应的 SQL（核心缺失部分） -->
    <select id="selectAvailableStock" resultType="com.gulimall.ware.entity.WareSkuEntity">
        <!-- 逻辑：根据 skuId 查找，且可用库存（总库存 - 已锁定库存）≥ 需要锁定的 count -->
        SELECT
        id, sku_id, ware_id, stock, stock_locked  <!-- 字段要和 WareSkuEntity 对应，也可写 * -->
        FROM
        ware_sku  <!-- 表名要和数据库实际表名一致（你的实体类 @TableName 是 "ware_sku"，没问题） -->
        WHERE
        sku_id = #{skuId}  <!-- 对应 DAO 方法的 @Param("skuId") -->
        AND (stock - stock_locked) >= #{count}  <!-- 可用库存 ≥ 需要锁定的数量（@Param("count")） -->
        LIMIT 1  <!-- 只返回一条符合条件的记录（找到一个有足够库存的仓库即可） -->
    </select>
    <update id="lockSkuStock">
        UPDATE ware_sku
        SET stock_locked = stock_locked + #{num}
        WHERE sku_id = #{skuId}
          AND ware_id = #{wareId}
          AND (stock - stock_locked) >= #{num}
    </update>
    <update id="unlockStockByOrderSn">
        UPDATE ware_sku ws
            JOIN order_item oi ON ws.sku_id = oi.sku_id
            JOIN order_tbl o ON oi.order_id = o.id
            SET ws.stock_locked = ws.stock_locked - oi.quantity
        WHERE o.order_sn = #{orderSn}
          AND ws.stock_locked >= oi.quantity
    </update>


</mapper>
